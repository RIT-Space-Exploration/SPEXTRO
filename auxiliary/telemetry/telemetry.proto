/* Google Protobuf proto file for SPEXTRO telemetry
 * Orginization: RIT Space 
 * Author: Dylan R. Wagner (drw6528@rit.edu)
 */

syntax = "proto3";

package spextro;

enum CommandType {
    ARM_PAYLOAD = 1;
    DISARM_PAYLOAD = 2;
    SOLENOID_OPEN = 3;
    SOLENOID_CLOSE = 4;
}

message Quaternion {
    // Quaternion holding absolute orientation
    int32 a_comp = 1;
    int32 b_comp = 2;
    int32 c_comp = 3;
    int32 d_comp = 4;
}

message Telemetry {

    message Header {
        // sent_time is time from system initialization in seconds
        uint32 sent_time_s = 1;
    }

    message Altitude {
        // Altitude is in meters
        float altitude_from_sea_level_m = 1;
        float relative_attitude_m = 2;
    }

    message Environmental {
        int32 temperature_degC = 1;
        uint32 pressure = 2;
        uint32 humidity = 3; 
    }

    message Orientation {
        Quaternion quaternion = 1;
    }

    message GPSPosition {
        // Using Decimal Degrees
        float latitude = 1;
        float longitude = 2;
    }

    message SciencePayload {
        // data is science sensor samples from time_start to time_end
        repeated uint32 data = 1;
        uint32 time_start = 2;
        uint32 time_end = 3;
    }

    message Acceleration {
        int32 accel_x = 1;
        int32 accel_y = 2;
        int32 accel_z = 3;
    }

    message SystemHealth {
        // Percentage of charge left
        uint32 battery_voltage_1 = 1;
        uint32 battery_voltage_2 = 2;
    }

    message SystemPhase {
        enum FlightPhase {
            STANDBY = 0;
            LAUNCH_READY = 1;
            LAUNCHED = 2;
            PAYLOAD_DEPLOYED = 3;
            PARACHUTE_DEPLOYED = 4;
            RECOVERY = 5;
        }

        FlightPhase phase = 3;
    }

    message CommandStatus {
        Command type = 1;
        bool was_success = 2;
    }

    message DeploymentSwitchERROR {
        enum SwitchUnit {
            UNIT_1 = 0;
            UNIT_2 = 1;
            UNIT_3 = 2;
            UNIT_4 = 3;
        }
        SwitchUnit unit = 1;
        bool switch_status = 2;
    }

    message PowerERROR {
        enum PowerUnit {
            UNIT_1 = 0;
            UNIT_2 = 1;
        }
        PowerUnit unit = 1;
    }

    message StorageERROR {
        // Failed to store data, with functioning storage
        bool failed = 1;
    }

    message HardwareERROR {
        enum HardwareUnit {
            XBEE_TRANSCEIVER = 0;
            BOSCH_BNO055_IMU = 1;
            BOSCH_BME680 = 2;
            UBLOX_MAX_M8Q = 3;
            SD_CARD = 4;
            // TODO add more
        }
        HardwareUnit unit = 1;
    }
    
    Header header = 1;
    
    oneof data {
        Altitude altitude = 2;
        Orientation orientation = 3;
        SciencePayload science_payload = 4;
        Environmental environmental = 5;
        GPSPosition position = 6;
        Acceleration accel = 7;
        SystemPhase system_phase = 8;
        CommandStatus cmd_status = 9;
        // Error messages
        DeploymentSwitchERROR switch_error = 10;
        PowerERROR power_error = 11;
        StorageERROR storage_error = 12;
        HardwareERROR hardware_error = 13;
    }
}

message Command {

    CommandType type = 1;

}

message SensorLog {

    message PollTime {
        // sent_time is time from system initialization in seconds
        uint32 sent_time_s = 1;
    }

    message BNO055 {
        int32 accel_x = 1;
        int32 accel_y = 2;
        int32 accel_z = 3;
        Quaternion quaternion_orentation = 4;
    }

    message StratoLoggerCF {
        float altitude_m = 1;
    }

    PollTime poll_time = 1;

    oneof data {
        BNO055 bno055 = 2;
        StratoLoggerCF stratologgerCF = 3;
    }
    
}